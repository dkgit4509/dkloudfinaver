
import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Heart, BookOpen, Quote } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';

interface Poetry {
  Title: string;
  Content: string;
  Type?: string;
  Theme?: string;
  Language?: string;
}

const PoetrySection = () => {
  const [allPoetry, setAllPoetry] = useState<Poetry[]>([]);
  const [loading, setLoading] = useState(true);
  const [expandedPoetry, setExpandedPoetry] = useState<number | null>(null);

  // Static poetry data based on your content
  const staticPoetry: Poetry[] = [
    {
      Title: "‡§Æ‡•á‡§∞‡•Ä ‡§™‡•Ä‡§∏",
      Content: "‡§Æ‡•Å‡§ù‡•á ‡§≤‡•ã‡§ó ‡§¶‡§∏ ‡§¨‡•Ä‡§∏ ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è\n‡§§‡•Å‡§ù‡§∏‡•á ‡§¶‡•Ç‡§∞‡•Ä ‡§π‡§∞‡§ó‡§ø‡§ú ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è\n‡§§‡•á‡§∞‡•Ä ‡§¨‡§æ‡§π‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§Ü‡§ï‡•á ‡§Æ‡§ø‡§≤‡§§‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§Æ‡•Å‡§ù‡•á\n‡§π‡§æ‡§Ç ‡§π‡§æ‡§Ç ‡§Æ‡•Å‡§ù‡•á ‡§™‡•Ä‡§∏ ‡§µ‡§π‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Love",
      Language: "Hindi"
    },
    {
      Title: "‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
      Content: "‡§Æ‡•á‡§∞‡•á ‡§™‡§æ‡§∏ ‡§µ‡§ï‡•ç‡§§ ‡§ï‡§ø‡§§‡§®‡§æ ‡§π‡•à, ‡§®‡§π‡•Ä‡§Ç ‡§ú‡§æ‡§®‡§§‡§æ ‡§π‡•Ç‡§Ç\n‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•Ä‡§®‡§æ ‡§π‡•à ‡§Æ‡•Å‡§ù‡•á, ‡§¨‡§∏ ‡§Ø‡§π‡•Ä ‡§ú‡§æ‡§®‡§§‡§æ ‡§π‡•Ç‡§Ç\n‡§î‡§∞ ‡§§‡•Å‡§Æ‡§®‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡§ø‡§ñ‡§æ‡§Ø‡§æ ‡§π‡•à ‡§ú‡•ã ‡§≠‡•Ä ‡§Ü‡§ú‡§§‡§ï\n‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡•à‡§Ç ‡§¨‡§∏ ‡§µ‡§π‡•Ä ‡§ú‡§æ‡§®‡§§‡§æ ‡§π‡•Ç‡§Ç",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Love",
      Language: "Hindi"
    },
    {
      Title: "‡§â‡§∏‡§ï‡•á ‡§Ü‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶",
      Content: "‡§Æ‡•Å‡§ù‡•á ‡§ï‡•Å‡§õ ‡§®‡§π‡•Ä‡§Ç ‡§™‡§æ‡§®‡§æ ‡§π‡•à ‡§â‡§∏‡•á ‡§™‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶\n‡§§‡•Å‡§Æ‡•ç‡§π‡•á ‡§≠‡•Ä ‡§ï‡•Å‡§õ ‡§∏‡•Å‡§®‡§æ‡§ä‡§Ç‡§ó‡§æ ‡§â‡§∏‡§ï‡•á ‡§≤‡§ø‡§è ‡§ó‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶\n‡§Ø‡•á ‡§™‡§π‡§æ‡§°‡§º, ‡§¨‡§∞‡•ç‡§´ ‡§®‡§¶‡§ø‡§Ø‡§æ‡§Ç ‡§ñ‡•Ç‡§¨‡§∏‡•Ç‡§∞‡§§ ‡§§‡•ã ‡§≤‡§ó‡§§‡•á ‡§π‡•à‡§Ç ‡§Æ‡•Å‡§ù‡•á\n‡§∂‡§∞‡•ç‡§§ ‡§¨‡§∏ ‡§á‡§§‡§®‡•Ä ‡§π‡•à ‡§â‡§∏‡§ï‡•á ‡§Ü‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Love",
      Language: "Hindi"
    },
    {
      Title: "‡§µ‡§ú‡§π‡•á‡§Ç ‡§ó‡§Æ",
      Content: "‡§ï‡•Å‡§õ ‡§™‡§≤ ‡§†‡§π‡§∞‡§®‡•á ‡§ï‡•ã ‡§†‡§ø‡§ï‡§æ‡§®‡•á ‡§¢‡•Ç‡§Ç‡§¢ ‡§∞‡§π‡§æ ‡§π‡•Ç‡§Ç\n‡§ó‡•Å‡§ú‡§∞ ‡§ó‡§è ‡§ú‡•ã ‡§µ‡•ã ‡§ú‡§Æ‡§æ‡§®‡•á ‡§¢‡•Ç‡§Ç‡§¢ ‡§∞‡§π‡§æ ‡§π‡•Ç‡§Ç\n‡§Æ‡§æ‡§∞‡§®‡•á ‡§ï‡•ã ‡§Æ‡•Å‡§ù‡•á ‡§Ü‡§Æ‡§¶‡§æ ‡§π‡•à‡§Ç ‡§µ‡§ú‡§π‡•á ‡§ó‡§Æ ‡§Æ‡•á‡§∞‡•á\n‡§Ø‡•á ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§π‡•Ç‡§Ç ‡§ú‡•ã ‡§ú‡•Ä‡§®‡•á ‡§ï‡•á ‡§¨‡§π‡§æ‡§®‡•á ‡§¢‡•Ç‡§Ç‡§¢ ‡§∞‡§π‡§æ ‡§π‡•Ç‡§Ç",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Life",
      Language: "Hindi"
    },
    {
      Title: "‡§ú‡•ã ‡§§‡•Ç ‡§π‡•à",
      Content: "‡§π‡§∞ ‡§Æ‡§π‡§´‡§ø‡§≤ ‡§ï‡§Æ‡§æ‡§≤ ‡§∏‡•Ä ‡§≤‡§ó‡§§‡•Ä ‡§π‡•à, ‡§ú‡•ã ‡§§‡•Ç ‡§π‡•à\n‡§Ø‡•á ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ñ‡§Ø‡§æ‡§≤ ‡§∏‡•Ä ‡§≤‡§ó‡§§‡•Ä ‡§π‡•à, ‡§ú‡•ã ‡§§‡•Ç ‡§π‡•à\n‡§ú‡•ã ‡§§‡•Ç ‡§®‡§π‡•Ä‡§Ç, ‡§§‡•ã ‡§≤‡§ó‡§§‡§æ ‡§π‡•à ‡§Æ‡•Å‡§ù‡•á ‡§∏‡§¨ ‡§ñ‡§æ‡§ï ‡§∏‡§æ\n‡§î‡§∞ ‡§ñ‡§æ‡§ï ‡§≠‡•Ä ‡§ó‡•Å‡§≤‡§æ‡§≤ ‡§∏‡•Ä ‡§≤‡§ó‡§§‡•Ä ‡§π‡•à, ‡§ú‡•ã ‡§§‡•Ç ‡§π‡•à",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Love",
      Language: "Hindi"
    },
    {
      Title: "‡§Æ‡§∞‡§®‡§æ ‡§π‡•ã‡§ó‡§æ",
      Content: "‡§ú‡•Å‡§≤‡•ç‡§´‡•ã ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡•á ‡§µ‡•ã ‡§™‡•Å‡§∞‡§µ‡§æ‡§à ‡§≤‡•á‡§ï‡§∞ ‡§ö‡§≤‡§§‡•Ä ‡§π‡•à\n‡§π‡•ã‡§Ç‡§†‡•ã ‡§™‡§∞ ‡§≤‡§´‡•ç‡§ú‡•ã ‡§ï‡•Ä ‡§∂‡§π‡§®‡§æ‡§à ‡§≤‡•á‡§ï‡§∞ ‡§ö‡§≤‡§§‡•Ä ‡§π‡•à\n‡§Æ‡§∞‡§®‡§æ ‡§π‡•ã‡§ó‡§æ ‡§§‡•ã ‡§¶‡•á‡§ñ‡•Ç‡§Ç‡§ó‡§æ ‡§ú‡•Ä ‡§≠‡§∞ ‡§â‡§∏‡§ï‡•Ä ‡§Ü‡§Ç‡§ñ‡•ã ‡§Æ‡•á‡§Ç\n‡§Ü‡§Ç‡§ñ‡•ã ‡§Æ‡•á‡§Ç ‡§µ‡•ã ‡§∏‡§æ‡§ó‡§∞ ‡§∏‡•Ä ‡§ó‡§π‡§∞‡§æ‡§à ‡§≤‡•á‡§ï‡§∞ ‡§ö‡§≤‡§§‡•Ä ‡§π‡•à",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Love",
      Language: "Hindi"
    },
    {
      Title: "‡§Æ‡•Å‡§ù‡§∏‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§Æ‡§§ ‡§ï‡§∞‡§®‡§æ",
      Content: "‡§Æ‡•á‡§∞‡•Ä ‡§Æ‡§æ‡§∏‡•Ç‡§Æ ‡§¨‡§æ‡§§‡•ã ‡§™‡§∞, ‡§è‡§§‡§¨‡§æ‡§∞ ‡§Æ‡§§ ‡§ï‡§∞‡§®‡§æ\n‡§ó‡§∞ ‡§ï‡§≠‡•Ä ‡§ï‡§∞ ‡§≠‡•Ä ‡§≤‡•ã, ‡§§‡•ã ‡§¨‡§æ‡§∞ ‡§¨‡§æ‡§∞ ‡§Æ‡§§ ‡§ï‡§∞‡§®‡§æ\n‡§ó‡•Å‡§∞‡•Å‡§∞ ‡§ö‡§¢‡§º ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§Æ‡•Å‡§ù‡•á, ‡§ú‡§∞‡§æ ‡§∏‡•á ‡§á‡§∂‡•ç‡§ï ‡§ï‡§æ ‡§≠‡•Ä\n‡§Æ‡•à‡§Ç ‡§™‡§∏‡§Ç‡§¶ ‡§Ü ‡§≠‡•Ä ‡§ú‡§æ‡§ä‡§Ç ‡§ï‡§π‡•Ä‡§Ç, ‡§§‡•ã ‡§á‡§ú‡§π‡§æ‡§∞ ‡§Æ‡§§ ‡§ï‡§∞‡§®‡§æ\n‡§Ö‡§ó‡§∞ ‡§ï‡§∞ ‡§¶‡•Ç‡§Ç ‡§á‡§ú‡§π‡§æ‡§∞‡•á ‡§¶‡§ø‡§≤ ‡§Æ‡•à‡§Ç ‡§π‡•Ä ‡§ï‡§≠‡•Ä ‡§§‡•Å‡§Æ‡§∏‡•á\n‡§§‡•ã ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§Æ‡§§ ‡§ï‡§∞‡§®‡§æ",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Love",
      Language: "Hindi"
    },
    {
      Title: "‡§≤‡•Ç‡§ü",
      Content: "‡§â‡§∏‡§ï‡•ã ‡§¶‡•á‡§ñ‡§æ ‡§§‡•ã ‡§¨‡•à‡§ü ‡§µ‡•à‡§ü ‡§∏‡§¨ ‡§π‡§æ‡§• ‡§∏‡•á ‡§Æ‡•á‡§∞‡•á ‡§õ‡•Ç‡§ü ‡§ó‡§Ø‡§æ\n‡§¶‡§ø‡§≤ ‡§õ‡§≤‡§ï‡§æ ‡§î‡§∞ ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§µ‡•ç‡§Ø‡§æ‡§∞ ‡§∏‡•á ‡§¨‡§æ‡§Ç‡§ß ‡§∏‡§¨‡•ç‡§∞ ‡§ï‡§æ ‡§ü‡•Ç‡§ü ‡§ó‡§Ø‡§æ\n‡§Æ‡•à‡§Ç‡§®‡•á ‡§õ‡•Å‡§™‡§æ ‡§ï‡•á ‡§∞‡§ñ‡§æ ‡§•‡§æ ‡§®‡§æ ‡§¶‡§æ ‡§¶‡§ø‡§≤ ‡§ï‡•ã ‡§π‡§æ‡§Ç ‡§ó‡•Å‡§≤‡•ç‡§≤‡§ï ‡§Æ‡•á‡§Ç\n‡§â‡§∏‡§ï‡§æ ‡§π‡•Å‡§®‡§∞ ‡§•‡§æ ‡§ê‡§∏‡§æ ‡§ï‡§ø ‡§¨‡§∏ ‡§Ü‡§Ç‡§ñ‡•ã ‡§∏‡•á ‡§≤‡•Ç‡§ü ‡§ó‡§Ø‡§æ",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Love",
      Language: "Hindi"
    },
    {
      Title: "‡§Æ‡§æ‡§Ç ‡§ï‡§æ ‡§ï‡§π‡§æ",
      Content: "‡§ú‡•ã ‡§ú‡•ã ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§®‡§æ ‡§•‡§æ ‡§µ‡§π‡•Ä ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•Ç‡§Ç\n‡§ó‡§≤‡§§ ‡§ï‡§∞‡§ï‡•á ‡§≤‡§ó‡§§‡§æ ‡§•‡§æ ‡§∏‡§π‡•Ä ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•Ç‡§Ç\n‡§è‡§ï ‡§π‡•Ä ‡§Æ‡§≤‡§æ‡§≤ ‡§π‡•à ‡§Æ‡•á‡§∞‡•Ä ‡§ú‡§ø‡§Ç‡§¶‡§ó‡•Ä ‡§ï‡§æ ‡§´‡§ï‡§§\n‡§Æ‡§æ ‡§ï‡§æ ‡§ï‡§π‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•Ç‡§Ç",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Life",
      Language: "Hindi"
    },
    {
      Title: "‡§π‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è",
      Content: "‡§π‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è, ‡§∏‡§°‡§º‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è\n‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è, ‡§∏‡§Ç‡§∏‡§æ‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è\n‡§ö‡§æ‡§π‡§ø‡§è ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§§‡§æ‡§¨ ‡§Æ‡•Å‡§ù‡•á, ‡§ï‡•Å‡§õ ‡§¨‡§®‡§®‡•á ‡§ï‡•á ‡§ñ‡•ç‡§µ‡§æ‡§¨ ‡§Æ‡•Å‡§ù‡•á\n‡§à‡§Æ‡§æ‡§® ‡§™‡§∞ ‡§Æ‡•á‡§∞‡•á ‡§∂‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è, ‡§π‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è\n‡§á‡§Ç‡§∏‡§æ‡§´ ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è, ‡§®‡§æ‡§≤‡§æ ‡§∏‡§æ‡§´ ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è\n‡§ö‡§æ‡§π‡§ø‡§è ‡§®‡§π‡•Ä‡§Ç ‡§∞‡•ã‡§ú‡§ó‡§æ‡§∞ ‡§Æ‡•Å‡§ù‡•á, ‡§ü‡•ã‡§ï‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§≤‡•ã‡§ó ‡§µ‡•ã ‡§ö‡§æ‡§∞ ‡§Æ‡•Å‡§ù‡•á\n‡§ï‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§®‡•á‡§§‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§¨‡§ï ‡§¨‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è\n‡§π‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è",
      Type: "‡§∂‡§æ‡§Ø‡§∞‡•Ä",
      Theme: "Social",
      Language: "Hindi"
    }
  ];

  useEffect(() => {
    // For now, use static data. In future, you can connect to SheetBest API
    setAllPoetry(staticPoetry);
    setLoading(false);
  }, []);

  const toggleExpanded = (index: number) => {
    setExpandedPoetry(expandedPoetry === index ? null : index);
  };

  const getThemeColor = (theme?: string) => {
    switch (theme) {
      case 'Love': return 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300';
      case 'Life': return 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300';
      case 'Social': return 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';
      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300';
    }
  };

  if (loading) {
    return (
      <div className="space-y-8">
        <div className="text-center py-16">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto"></div>
          <p className="text-gray-600 dark:text-gray-300 mt-4">Loading poetry...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center"
      >
        <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-2 flex items-center justify-center gap-2">
          <BookOpen className="w-6 h-6" />
          üñãÔ∏è Poetry & Shayari
        </h3>
        <p className="text-gray-600 dark:text-gray-300">
          Heartfelt verses from the soul ({allPoetry.length} pieces)
        </p>
      </motion.div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {allPoetry.map((poetry, index) => (
          <motion.div
            key={`${poetry.Title}-${index}`}
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, delay: index * 0.1 }}
            whileHover={{ y: -5 }}
            className="group"
          >
            <Card className="h-full bg-white dark:bg-gray-800 border-0 shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden">
              <CardHeader className="bg-gradient-to-br from-purple-600 to-pink-600 text-white">
                <div className="flex items-center justify-between">
                  <div className="flex-1">
                    <CardTitle className="text-lg font-bold mb-2 flex items-center gap-2">
                      <Quote className="w-5 h-5" />
                      {poetry.Title}
                    </CardTitle>
                    <div className="flex flex-wrap gap-2">
                      {poetry.Type && (
                        <Badge variant="secondary" className="bg-white/20 text-white text-xs">
                          {poetry.Type}
                        </Badge>
                      )}
                      {poetry.Theme && (
                        <Badge className={`text-xs ${getThemeColor(poetry.Theme)}`}>
                          {poetry.Theme}
                        </Badge>
                      )}
                    </div>
                  </div>
                  <Heart className="w-6 h-6 text-white/80" />
                </div>
              </CardHeader>
              
              <CardContent className="p-6">
                <div className="space-y-4">
                  <div className="bg-gray-50 dark:bg-gray-700/50 p-4 rounded-lg border-l-4 border-purple-500">
                    <div className="text-gray-700 dark:text-gray-300 leading-relaxed">
                      {expandedPoetry === index ? (
                        <div className="whitespace-pre-line font-medium">
                          {poetry.Content}
                        </div>
                      ) : (
                        <div className="whitespace-pre-line font-medium">
                          {poetry.Content.split('\n').slice(0, 2).join('\n')}
                          {poetry.Content.split('\n').length > 2 && '...'}
                        </div>
                      )}
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      {poetry.Language && (
                        <Badge variant="outline" className="text-xs">
                          {poetry.Language}
                        </Badge>
                      )}
                    </div>
                    
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() => toggleExpanded(index)}
                      className="text-purple-600 hover:text-purple-700 dark:text-purple-400 dark:hover:text-purple-300"
                    >
                      {expandedPoetry === index ? 'Show Less' : 'Read More'}
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>

      {allPoetry.length === 0 && !loading && (
        <motion.div
          initial={{ opacity: 0, scale: 0.8, y: 20 }}
          animate={{ opacity: 1, scale: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="text-center py-16"
        >
          <BookOpen className="w-16 h-16 text-gray-400 mx-auto mb-4" />
          <p className="text-gray-500 dark:text-gray-400 text-xl font-medium">
            üìñ No poetry found
          </p>
          <p className="text-gray-400 dark:text-gray-500 text-sm mt-2">
            More verses coming soon...
          </p>
        </motion.div>
      )}
    </div>
  );
};

export default PoetrySection;
